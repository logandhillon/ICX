plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'net.logandhillon'
version '0.9.5-alpha'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'net.logandhillon.icx'
    mainClass = 'net.logandhillon.icx.ICX'
}

javafx {
    version = '22-ea+11'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    implementation("org.apache.logging.log4j:log4j-core:2.24.0")
    compileOnly('org.jspecify:jspecify:1.0.0')  // fixes "error: module not found: org.jspecify"

    implementation("org.bouncycastle:bcprov-jdk15on:1.70")
    implementation("org.bouncycastle:bcpkix-jdk15on:1.70")
}

test {
    useJUnitPlatform()
}

gradle.projectsLoaded {
    def runDir = file("$rootDir/run")
    def clientDir = file("$runDir/client")
    def serverDir = file("$runDir/server")

    if (!runDir.exists()) runDir.mkdirs()
    if (!clientDir.exists()) clientDir.mkdirs()
    if (!serverDir.exists()) serverDir.mkdirs()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/ICX-${version}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}